version: "3.8"

services:
    telegraf:
      container_name: telegraf
      restart: unless-stopped
      image: telegraf:1.24.1
      ports:
        - "8092:8092"
      environment:
        HOST_PROC: /host/proc
        PGHOST: postgres
        PGPORT: 5432
        PGUSER: telegraf
        PGPASSWORD: ${POSTGRES_TELEGRAF_USER_PASSWORD}
        PGDATABASE: metrics
        INFLUXDB_TELEGRAF_HOST: ${INFLUXDB_TELEGRAF_HOST}
      privileged: true
      volumes:
        - /proc:/host/proc:ro
        - ./docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - public
      depends_on:
        - postgres

    postgres:
      container_name: postgres
      restart: unless-stopped
      image: timescale/timescaledb-ha:pg14-latest
      ports:
        - "5432:5432"
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      volumes:
        - ./docker/postgres/initdb.d:/docker-entrypoint-initdb.d
        - postgresql-data:/var/lib/postgresql/data
      networks:
        - public

        
    grafana:
      container_name: grafana
      restart: unless-stopped
      image: grafana/grafana:8.2.1
      user: "root"
      environment:
        GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
        GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      ports:
        - "3000:3000"
      volumes:
        - ./docker/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
        - ./docker/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
        - ./docker/grafana/DashboardTelegraf.json:/var/lib/grafana/dashboards/DashboardTelegraf.json
        - grafana-data:/var/lib/grafana
      networks:
        - public


volumes:
    postgresql-data:
    grafana-data:

networks:
    public:
        name: public